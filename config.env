# ========================================
# TRADING BOT UNIFIED CONFIGURATION
# ========================================
# This file handles both development and production modes
# Copy this file to your VM and fill in your API keys

# ========================================
# ALPACA API CONFIGURATION
# ========================================

# Your Alpaca API credentials
# Paper Trading Credentials (use these for testing)
APCA_API_KEY_ID=PK2L9VQ84F2F2ZN1WK2I
APCA_API_SECRET_KEY=Gx15OGa03Q2hmjanjGfghbB3cUGtl8E7KZbUmSY4

# Live Trading Credentials (uncomment when ready for live trading)
# ALPACA_API_KEY=your_live_api_key_here
# ALPACA_SECRET_KEY=your_live_secret_key_here

# Alpaca base URL (use paper trading for testing)
ALPACA_BASE_URL=https://paper-api.alpaca.markets

# WebSocket feed type (test, iex, sip, opra, indicative)
ALPACA_FEED=test

# Trading WebSocket URL (for trade updates, account updates, order updates)
ALPACA_TRADING_WEBSOCKET_URL=wss://paper-api.alpaca.markets/stream

# Market Data WebSocket URL (for real-time market data)
ALPACA_MARKET_DATA_WEBSOCKET_URL=wss://stream.data.alpaca.markets/v2/test

# WebSocket reconnection settings
RECONNECT_INTERVAL_MS=5000
MAX_RECONNECT_ATTEMPTS=10

# ========================================
# OPERATION MODE CONFIGURATION
# ========================================

# Operation mode: "paper" or "live"
OPERATION_MODE=paper

# Paper trading mode (true for paper, false for live)
ALPACA_PAPER_TRADING=true

# Auto-switch to live mode if live credentials are available
AUTO_SWITCH_TO_LIVE=false

# ========================================
# STREAMING CONFIGURATION
# ========================================

# Which data streams to enable (comma-separated)
STREAM_TYPES=Options,Crypto,News,Stocks

# Trading symbols to monitor
TRADING_SYMBOLS=AAPL,SPY240920C00500000,BTC/USD,ETH/USD

# Update interval in milliseconds
UPDATE_INTERVAL_MS=1000

# Data retention in hours
DATA_RETENTION_HOURS=24

# ========================================
# FILE STREAMING CONFIGURATION
# ========================================

# Data directory for streaming files
MARKET_DATA_DIR=live_data

# Maximum file size before rotation (MB)
MAX_FILE_SIZE_MB=100

# Data files for each stream type
CRYPTO_DATA_FILES=crypto_data_btc.json,crypto_data_eth.json
STOCK_DATA_FILES=stock_data_aapl.json,stock_data_spy.json
OPTIONS_DATA_FILES=options_data_spy.json
NEWS_DATA_FILES=news_data_aapl.json,news_data_spy.json

# ========================================
# OLLAMA AI CONFIGURATION
# ========================================

# Ollama base URL
OLLAMA_BASE_URL=http://localhost:11434

# Default AI model to use (recommended: llama2:7b for better trading analysis)
DEFAULT_AI_MODEL=llama2:7b

# Maximum timeout for Ollama requests in seconds (increase if getting timeout errors)
MAX_TIMEOUT_SECONDS=300

# Analysis interval in seconds
ANALYSIS_INTERVAL_SECONDS=30

# Alert threshold percentage
ALERT_THRESHOLD_PERCENT=5.0

# ========================================
# SERVER CONFIGURATION
# ========================================

# API server port
API_PORT=8080

# Live mode port (if different)
LIVE_MODE_PORT=8080

# WebSocket streaming enabled (set to false for Normal Mode REST API)
WEBSOCKET_ENABLED=false

# Auto restart on failure
AUTO_RESTART=true

# Health check interval in seconds
HEALTH_CHECK_INTERVAL_SECONDS=10

# Maximum memory usage in MB
MAX_MEMORY_USAGE_MB=512

# ========================================
# LOGGING CONFIGURATION
# ========================================

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Log file
LOG_FILE=trading_bot.log

# Live mode log file
LIVE_LOG_FILE=live_trading.log

# Error log file
ERROR_LOG_FILE=live_errors.log

# Trade log file
TRADE_LOG_FILE=live_trades.log

# ========================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ========================================

# Override feed type for live mode (if different)
# LIVE_ALPACA_FEED=iex

# Override symbols for live mode (if different)
# LIVE_TRADING_SYMBOLS=BTC/USD,ETH/USD,AAPL,SPY

# Override update interval for live mode (if different)
# LIVE_UPDATE_INTERVAL_MS=500